[{"C:\\xampp\\htdocs\\cricket-score\\src\\index.js":"1","C:\\xampp\\htdocs\\cricket-score\\src\\App.js":"2","C:\\xampp\\htdocs\\cricket-score\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\cricket-score\\src\\components\\Navbar.js":"4","C:\\xampp\\htdocs\\cricket-score\\src\\components\\MyCard.js":"5","C:\\xampp\\htdocs\\cricket-score\\src\\api\\Api.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":853,"mtime":1615036116214,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":805,"mtime":1615034538066,"results":"11","hashOfConfig":"8"},{"size":3345,"mtime":1615036416858,"results":"12","hashOfConfig":"8"},{"size":605,"mtime":1615035932321,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1p24ghg",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\xampp\\htdocs\\cricket-score\\src\\index.js",[],["30","31"],"C:\\xampp\\htdocs\\cricket-score\\src\\App.js",["32","33"],"import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport MyCard from \"./components/MyCard\";\nimport { getMatches } from \"./api/Api\";\nimport { Container, Grid, Typography } from \"@material-ui/core\";\nfunction App() {\n  const [matches, setMatches] = useState([]);\n\n  useEffect(() => {\n    getMatches()\n      .then((data) => {\n        console.log(data);\n        setMatches(data.matches);\n      })\n      .catch((error) => {});\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Navbar></Navbar>\n      <Container>\n        <Grid container>\n          <Grid item xs={12}>\n            {matches.map((match) => (\n              <MyCard match={match}></MyCard>\n            ))}\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\xampp\\htdocs\\cricket-score\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\cricket-score\\src\\components\\Navbar.js",["34"],"import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport {\n  Button,\n  IconButton,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyle = makeStyles((theme) => {\n  console.log(\"STYLE\", theme);\n});\n\nconst Navbar = () => {\n  const classes = useStyle();\n\n  return (\n    <div>\n      <AppBar color=\"primary\" position=\"static\" style={{ flexFlow: 1 }}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\">\n            <MenuIcon />\n          </IconButton>\n\n          <Typography variant=\"h6\">Live Score </Typography>\n\n          <span style={{ flexGrow: 1 }}></span>\n\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n","C:\\xampp\\htdocs\\cricket-score\\src\\components\\MyCard.js",["35","36"],"import React, { useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { getMatchDetail } from \"../api/Api\";\n\nconst MyCard = ({ match }) => {\n  const [detail, setDatail] = useState({});\n  const [open, setOpen] = useState(false);\n\n  const getMatchCard = () => (\n    <div>\n      <Card\n        style={{\n          background: match.matchStarted ? \"#e2e2e2\" : \"\",\n          marginTop: 15,\n        }}\n      >\n        <CardContent>\n          <Grid container justify=\"center\" alignItems=\"center\" spacing={4}>\n            <Grid item>\n              <Typography variant=\"h5\">{match[\"team-1\"]}</Typography>\n            </Grid>\n            <Grid item>\n              <img\n                style={{ width: 85 }}\n                src={require(\"../img/vs.png\")}\n                alt=\"\"\n              />\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h5\">{match[\"team-2\"]}</Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n\n        <CardActions>\n          <Grid container justify=\"center\">\n            <Button\n              onClick={() => {\n                showDetailBtnClicked(match[\"unique_id\"]);\n              }}\n              variant=\"outlined\"\n              color=\"secondary\"\n            >\n              Show Detail\n            </Button>\n            <Button\n              style={{ marginLeft: 5 }}\n              variant=\"outlined\"\n              color=\"primary\"\n            >\n              Starting time {new Date(match.dateTimeGMT).toLocaleString()}\n            </Button>\n          </Grid>\n        </CardActions>\n      </Card>\n    </div>\n  );\n\n  const showDetailBtnClicked = (id) => {\n    getMatchDetail(id)\n      .then((data) => {\n        console.log(data);\n        setDatail(data);\n        handleClickOpen();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      {match.type == \"Twenty20\" ? getMatchCard() : \"\"}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Match Detail...\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <Typography>{detail.stat}</Typography>\n            <Typography>\n              Match\n              <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\n                {detail.matchStarted ? \"Started\" : \"Still not started\"}\n              </span>\n            </Typography>\n            <Typography>\n              Score\n              <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\n                {\" \"}\n                {detail.score}\n              </span>\n            </Typography>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default MyCard;\n","C:\\xampp\\htdocs\\cricket-score\\src\\api\\Api.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":12},{"ruleId":"41","severity":1,"message":"45","line":7,"column":27,"nodeType":"43","messageId":"44","endLine":7,"endColumn":37},{"ruleId":"41","severity":1,"message":"46","line":17,"column":9,"nodeType":"43","messageId":"44","endLine":17,"endColumn":16},{"ruleId":"41","severity":1,"message":"47","line":3,"column":10,"nodeType":"43","messageId":"44","endLine":3,"endColumn":20},{"ruleId":"48","severity":1,"message":"49","line":96,"column":19,"nodeType":"50","messageId":"51","endLine":96,"endColumn":21},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'classes' is assigned a value but never used.","'makeStyles' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]